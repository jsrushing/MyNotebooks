

Go to frmManageGroupsAndAccounts

Ask for device PIN

If given, see if a previousaccounts file exists.
 
If it does, decrypt that list with PIN_Device and populate a Dict with the account names and PINs.

IF NOTHING DECRYPTED then PIN_Device IS WRONG PIN.

IF NOT WRONG PIN ...

	> Present Dict.keys in a list.
	
	> User can select from the list (dbl-click), or right-click the list to manage an Account <<<<

	> If user selects from the list, 
		Create an Account object with Dict[<list text>]'s key.
		Program.PIN_Master = Dict[<list text>]
Else (wrongpin = true)
	Show WRONGPIN label.

 
	
> 



> If Program.PIN_Master is null

	Decrypt any Account folders in the accounts\ directory you can.
	These are the Accounts available with that PIN_Master.
	Present them in a list.
	When selected, ask for PIN_Group.

	Also offer entering another AccountPIN/PIN_Master.
	Then Decrypt other directories in the accounts\ directory.

Create Program.CurrentAccount

CurrentAccount gets its Groups.

Show a list of the Groups in CurrentAccount.Groups

Select a Group. Get PIN_Group.

Decrypt Notebook Names in the Group w/ PIN_Group.









